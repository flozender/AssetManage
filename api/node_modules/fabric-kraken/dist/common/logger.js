"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("./constants");
const winston = require("winston");
/**
 * Logger is singleton class that creates
 */
class Logger {
    /**
     * Fetches a the logger with the specified logger ID or creates a new one if that does not exist
     * @param name
     */
    static get(name, level) {
        if (this.loggers.has(name)) {
            return this.loggers.get(name);
        }
        else {
            level = level === undefined ? constants_1.LOGGING_LEVEL : level;
            const newLogger = createLogger(level, name);
            this.loggers.set(name, newLogger);
            return newLogger;
        }
    }
}
Logger.loggers = new Map();
exports.default = Logger;
/**
 * [INTERNAL FUNCTION]
 *
 * Rip of the createLogger function from chaincode.js
 *
 * @param level
 * @param name
 */
function createLogger(level, name) {
    return new winston.Logger({
        level,
        transports: [
            new winston.transports.Console({
                timestamp: () => new Date().toISOString(),
                handleExceptions: true,
                formatter: options => `${options.timestamp()} ${winston.config.colorize(options.level, options.level.toUpperCase())} ${winston.config.colorize(options.level, `[${name}]`)} ${options.message ? options.message : ''}`
            })
        ],
        exitOnError: false
    });
}
//# sourceMappingURL=logger.js.map