"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const parse_1 = require("./parse");
/**
 * Serialises data into a Buffer.
 *
 * Maps are converted into objects before serialisation.
 * Dates are converted into ISO strings before serialisation.
 * @param payload
 */
function toBuffer(payload) {
    if (payload instanceof Map) {
        return Buffer.from(JSON.stringify(parse_1.mapToObject(payload)));
    }
    else if (typeof payload === 'object') {
        if (payload.next)
            throw new Error('Cannot convert an iterator to Buffer, convert to a Map or Array first');
        return Buffer.from(JSON.stringify(payload));
    }
    else {
        return Buffer.from(`${payload}`);
    }
}
exports.toBuffer = toBuffer;
function fromBuffer(buffer) {
    if (!(buffer instanceof Buffer) && !(buffer instanceof ArrayBuffer))
        throw new Error('Cannot deserialise a non-buffer');
    try {
        return JSON.parse(`${buffer}`);
    }
    catch (error) {
        return `${buffer}`;
    }
}
exports.fromBuffer = fromBuffer;
//# sourceMappingURL=buffers.js.map