/**
 * Arguemnts passed into fabric chaincode are in string format.
 *
 * Applying this decorator to a method will intercept the function before it is called and parse the stringified arguments
 * into the respective types passed into it.
 *
 * @param {any} types Constructors for types of the arguments at respective postitions.
 */
export declare function mutateArgs(...types: any[]): any;
/**
 * Take a stringified object, plain object or typed object and validate it against a schema defiend by a constructor function.
 *
 * In the case of stringified and plain objects they are converted into a typed object of the specified constructor first.
 *
 * @param candidate Candidate object to validate
 * @param targetType Constructor to validate against
 */
export declare function mutateAndValidate(candidate: object, targetType: Function): any;
/**
 * Take a stringified object, plain object or typed object and validate it against a schema defiend by a constructor function.
 *
 * In the case of stringified and plain objects they are converted into a typed object of the specified constructor first.
 *
 * @param candidate Candidates object to validate
 * @param targetType Constructors to validate the respective canddiates against
 */
export declare function mutateAndValidate(candidates: object[], targetTypes: Function[]): any[];
