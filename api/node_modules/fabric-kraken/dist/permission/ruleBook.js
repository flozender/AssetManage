"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const pathTree_1 = require("./pathTree");
/**
 * RuleBook is a wrapper class for SetTree that uses it to store a
 * Kraken permission tree.
 */
class RuleBook {
    constructor(initialTree) {
        if (initialTree)
            this.pathTree = initialTree;
        else
            this.pathTree = new pathTree_1.default();
    }
    /**
     * Retrieves a rule at the given path.
     * @param path
     */
    getRule(path) {
        const node = this.pathTree.getNode(path);
        if ('data' in node)
            return node.data;
        else
            throw new Error(`No rule found at '${path.join(' • ')}'`);
    }
    /**
     * Creates a rule at the given path, cannot overwrite existing rules.
     * @param path
     * @param rule
     */
    createRule(path, rule) {
        if (!path.length)
            throw new Error('Cannot create rules on root');
        else
            return this.pathTree.createNode(path, rule);
    }
    /**
     * Updates an existing rule at the given path.
     * @param path
     * @param newRule
     * @param replace
     */
    updateRule(path, newRule, replace = false) {
        let updatedRule;
        if (newRule) {
            if (replace) {
                updatedRule = newRule;
            }
            else {
                const node = this.pathTree.getNode(path);
                updatedRule = newRule;
            }
        }
        else {
            if (!replace)
                throw new Error("You must set the replace flag to true if you want to update the rule to 'undefined'");
        }
        this.pathTree.updateNode(path, updatedRule);
    }
    /**
     * Removes an existing rule at the given path.
     * @param path
     */
    deleteRule(path) {
        const node = this.pathTree.getNode(path);
        if ('data' in node)
            node.data = undefined;
        else
            throw new Error(`No rule found at '${path.join(' • ')}'`);
    }
}
exports.default = RuleBook;
//# sourceMappingURL=ruleBook.js.map