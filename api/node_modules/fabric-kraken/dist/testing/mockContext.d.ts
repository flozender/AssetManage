import { Context } from 'fabric-contract-api';
import StateService from '../services/stateService';
import AuthorService from '../services/authorService';
import { ClientIdentity } from 'fabric-shim';
import KrakenMockStub from './mockStub';
import { MockStatePair } from './mockState';
export declare class KrakenMockContext extends Context {
    state: StateService;
    author: AuthorService;
    stub: KrakenMockStub;
    constructor(stub?: KrakenMockStub);
    setChaincodeStub(stub: KrakenMockStub): void;
    setClientIdentity(clientIdentity: ClientIdentity): void;
}
interface MockContextConfig {
    state?: MockStatePair | MockStatePair[];
    args?: string[];
    mspId?: string;
    userId?: string;
}
export declare function makeMockContext(config?: MockContextConfig): Promise<KrakenMockContext>;
export {};
