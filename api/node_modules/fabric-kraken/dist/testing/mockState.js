"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
const buffers_1 = require("../mutation/buffers");
/**
 * Contains a MockState and provides extra helper functions.
 */
class MockState extends Map {
    /**
     * Returns the value at the given key deserialised from buffer form. Returns 'undefined' if key does not exist.
     * @param key
     */
    getDeserialised(key) {
        const bakedKey = utils_1.makeKey(key);
        return this[bakedKey] === undefined
            ? undefined
            : buffers_1.fromBuffer(this[bakedKey]);
    }
    /**
     * Returns the entire map in deserialised format.
     */
    deserialised(returnType) {
        let deserialised;
        if (returnType === Map) {
            deserialised = new Map();
            for (const key of Object.getOwnPropertyNames(this)) {
                deserialised.set(key, buffers_1.fromBuffer(this[key]));
            }
        }
        else {
            deserialised = [];
            for (const key of Object.getOwnPropertyNames(this)) {
                const rawKey = utils_1.unmakeKey(key);
                const rawValue = buffers_1.fromBuffer(this[key]);
                deserialised.push({
                    key: rawKey,
                    value: rawValue
                });
            }
        }
        return deserialised;
    }
}
exports.default = MockState;
//# sourceMappingURL=mockState.js.map